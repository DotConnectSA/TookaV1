@model RealEstateV1.Models.T_Address

<script src="~/Scripts/jquery-1.10.2.js"></script>

<script type="text/javascript">
    var map;
    var gmarkers = [];
    $(document).ready(function () {

        $("#list").html('');
        @foreach (var item in (SelectList)ViewBag.featuer)
        {
            @:var tab = "<a style=\"cursor: pointer;\" onclick=\"reloadMap('" + "@item.Text" + "')\">"+"@item.Text"+"</a>";
                                    @:$("#list").append(tab);
                                }

        google.maps.event.addDomListener(window, 'load', initialize);


        function initialize()
        {
            var mapProp =
                {
                    center: new google.maps.LatLng(@Model.Postion.X, @Model.Postion.Y),
                    zoom: 15,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };

            map = new google.maps.Map(document.getElementById("googleMap2"), mapProp);

            var marker = new google.maps.Marker({
                position:  new google.maps.LatLng(@Model.Postion.X, @Model.Postion.Y),
                map: map,
                title: 'Tate Gallery'
            });


        }
    });

    function reloadMap(kind)
    {
        for (i = 0; i < gmarkers.length; i++)
        {
            gmarkers[i].setMap(null);
        }

        var data=[];
        var k="";

        @foreach(var item in Model.Town.townLinkFeature)
        {
            if(item.townFeatureKind!=null)
            {
                <text>
                k="@item.townFeature.Feature.ToString()";
                if (k == kind)
                {
                    var v={"Id": @item.ID, "PlaceName": "@item.townFeatureKind.Kind", "Desc":"@item.townFeatureKind.Description","GeoLong": "@item.townFeatureKind.position.X", "GeoLat": "@item.townFeatureKind.position.Y"};
                    data.push(v);
                }
                </text>
            }

        }

        $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.PlaceName
            });

            // Make the marker-pin blue!
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/blue-dot.png')

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item.PlaceName + "</h2>" + "<div><h4>الشرح: " + item.Desc + "</h4></div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });
            gmarkers.push(marker);
        });

    }

</script>

<div style="position: relative; top: 0px; max-width: 100%; left: 0px; width: 100%; height: 456px; background: #191919;">
    <div style="position: absolute; width:100%; height: 50px; z-index: 99;">
        <div style="position: absolute; background-color: #808080; filter:alpha(opacity=30); opacity:.3; width: 100%; height:100%;"></div>
        <div id="list" style="position: absolute;">

        </div>
    </div>
    <div id="googleMap2" style="width:100%;height:456px;"> </div>
</div>


<!-- This css is to ensure that the google map contols (zoom bar etc) show and size correctly. -->
<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>